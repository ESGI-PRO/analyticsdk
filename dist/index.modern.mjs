function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},t.apply(this,arguments)}class e{constructor(t){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey=t.apiKey,this.baseUrl=t.baseUrl||"http://localhost:8085"}request(e,r){const s=`${this.baseUrl}/${e}`,o=t({},r,{headers:{"Content-Type":"application/json","X-Api-Key":this.apiKey}});return fetch(s,o).then(t=>{if(t.ok)return t.json();throw new Error(t.statusText)})}}const r="createAnalytics";class s extends e{}var o;o=s,[class extends e{constructor(t){super(t)}createAnalytics(t){return t.userAgent=navigator.userAgent,console.log("userAgent :",t.userAgent),console.log("request",this.request),this.request(`${r}`,{method:"POST",body:JSON.stringify(t)})}getAnalytics(){return this.request("Analytics")}getAnalyticsById(t){return this.request(`analyticsbyid/${t}`)}trackAnalyticsEvents(t){try{return this.request(`${r}`,{method:"POST",body:JSON.stringify(t)})}catch(e){console.error("Failed to track event:",t,e)}}CountVisitors(t){try{if(console.log("this.getVisitors()",this.verifVisitors()),!0!==this.verifVisitors()){t.userAgent=navigator.userAgent;const e=this.request("AnalyticsVisitors",{method:"POST",body:JSON.stringify(t)});return sessionStorage.setItem("visited","true"),e}console.log("already counted")}catch(t){console.error("Failed to track event:",t)}}verifVisitors(){return!!sessionStorage.getItem("visited")}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(e=>{Object.defineProperty(o.prototype,e,Object.getOwnPropertyDescriptor(t.prototype,e)||Object.create(null))})});export{s as default};
