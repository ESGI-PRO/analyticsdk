{"code":"export class Base {\r\n    apiKey;\r\n    baseUrl;\r\n    constructor(config) {\r\n        this.apiKey = config.apiKey;\r\n        this.baseUrl = config.baseUrl || 'http://localhost:8085';\r\n    }\r\n    request(endPoint, options) {\r\n        const url = `${this.baseUrl}/${endPoint}`;\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'X-Api-Key': this.apiKey,\r\n        };\r\n        const config = {\r\n            ...options,\r\n            headers\r\n        };\r\n        const userAgent = navigator.userAgent;\r\n        return fetch(url, config).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error(response.statusText);\r\n        });\r\n    }\r\n}\r\n","references":[],"dts":{"name":"/Users/yatech/Documents/ESGI/web_analytics/projet/analyticsdk/dist/base.d.ts","writeByteOrderMark":false,"text":"type config = {\r\n    appName: string;\r\n    apiKey: string;\r\n    baseUrl?: string;\r\n};\r\nexport declare abstract class Base {\r\n    private apiKey;\r\n    private baseUrl;\r\n    constructor(config: config);\r\n    protected request<T>(endPoint: string, options?: RequestInit): Promise<T>;\r\n}\r\nexport {};\r\n"}}
