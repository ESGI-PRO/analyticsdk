{"code":"import { Base } from \"../base\";\r\nconst resource = \"createAnalytics\";\r\nexport class Analytics extends Base {\r\n    constructor(config) {\r\n        super(config);\r\n    }\r\n    createAnalytics(analytics) {\r\n        analytics.body = navigator.userAgent;\r\n        console.log(\"userAgent :\", analytics.body);\r\n        console.log(\"request\", this.request);\r\n        return this.request(`${resource}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(analytics)\r\n        });\r\n    }\r\n    getAnalyticsById(id) {\r\n        return this.request(`${resource}/${id}`);\r\n    }\r\n    getAnalytics() {\r\n        return this.request(`${resource}`);\r\n    }\r\n    trackAnalyticsEvents(analytics) {\r\n        try {\r\n            const event = this.request(`${resource}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(analytics)\r\n            });\r\n            return event;\r\n        }\r\n        catch (error) {\r\n            console.error('Failed to track event:', analytics, error);\r\n        }\r\n    }\r\n    updateVisitors(visitorsNumber) {\r\n        try {\r\n            const visitors = this.request(`${resource}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(visitorsNumber)\r\n            });\r\n            return visitors;\r\n        }\r\n        catch (error) {\r\n            console.error('Failed to track event:', error);\r\n        }\r\n    }\r\n    getVisitors() {\r\n        const visitors = sessionStorage.getItem('visited');\r\n        if (visitors) {\r\n        }\r\n        else {\r\n            sessionStorage.setItem(\"visited\", \"1\");\r\n        }\r\n    }\r\n}\r\n","references":["/Users/yatech/Documents/ESGI/web_analytics/projet/analyticsdk/src/base.ts","/Users/yatech/Documents/ESGI/web_analytics/projet/analyticsdk/src/analytics/type.ts"],"dts":{"name":"/Users/yatech/Documents/ESGI/web_analytics/projet/analyticsdk/dist/analytics/index.d.ts","writeByteOrderMark":false,"text":"import { Base } from \"../base\";\r\nimport { AnalyticsType, CreateAnalyticsType } from \"./type\";\r\nexport declare class Analytics extends Base {\r\n    constructor(config: {\r\n        appName: string;\r\n        apiKey: string;\r\n        baseUrl?: string;\r\n    });\r\n    createAnalytics(analytics: CreateAnalyticsType): Promise<AnalyticsType>;\r\n    getAnalyticsById(id: string): Promise<AnalyticsType>;\r\n    getAnalytics(): Promise<AnalyticsType[]>;\r\n    trackAnalyticsEvents(analytics: CreateAnalyticsType): Promise<unknown> | undefined;\r\n    updateVisitors(visitorsNumber: number): Promise<unknown> | undefined;\r\n    getVisitors(): void;\r\n}\r\n"}}
